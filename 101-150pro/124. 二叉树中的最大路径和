链接：https://leetcode-cn.com/problems/binary-tree-maximum-path-sum
给定一个非空二叉树，返回其最大路径和。

本题中，路径被定义为一条从树中任意节点出发，达到任意节点的序列。该路径至少包含一个节点，且不一定经过根节点。

示例 1:

输入: [1,2,3]

       1
      / \
     2   3

输出: 6
示例 2:

输入: [-10,9,20,null,null,15,7]

   -10
   / \
  9  20
    /  \
   15   7

输出: 42

res保留中间最大值；然后递归，每次返回左右子树中较大的一个
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int res = INT_MIN;
    int maxPathSum(TreeNode* root) {
        maxPath(root);
        return res;
    }
    
    int maxPath(TreeNode* root){
        if(root == NULL) return 0;
        int left = maxPath(root -> left);
        int right = maxPath(root -> right);
        res = max(left + right + root -> val, res);
        int temp = root -> val + max(left, right);
        return temp > 0 ? temp : 0;
    }
};
