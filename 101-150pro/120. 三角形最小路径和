链接：https://leetcode-cn.com/problems/triangle
给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。

例如，给定三角形：

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。

class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int m = triangle.size();
        if(m == 0) return 0;
        if(m == 1) return triangle[0][0];
        
        vector<int> temp;
        for(int i = 1; i < m; i++){
            for(int j = 0; j <= i; j++){
                if(j > 0 && j < i) triangle[i][j] += min(triangle[i - 1][j - 1], triangle[i - 1][j]);
                else if(j == 0) triangle[i][j] += triangle[i - 1][j];
                else triangle[i][j] += triangle[i - 1][j - 1];
            }
        }
        int res = triangle[m - 1][0];
        for(auto it : triangle[m - 1])
            if(res > it) res = it;
        return res;
    }
};
