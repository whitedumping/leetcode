链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree
给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL) return 0;
        int res = -1;
        queue<TreeNode*> q;
        q.push(root);
        
        bool flag = true;
        while(!q.empty() && flag){
            int t = q.size();
            while(t-- && flag){
                if(q.front() -> left == NULL && q.front() -> right == NULL) flag = false;
                if(q.front() -> left != NULL) q.push(q.front() -> left);
                if(q.front() -> right != NULL) q.push(q.front() -> right);
                q.pop();
            }
            if(res == -1) res = 1;
            else res++;
        }
        return res;
    }
};
