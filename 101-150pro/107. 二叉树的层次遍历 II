链接：https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii
给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其自底向上的层次遍历为：

[
  [15,7],
  [9,20],
  [3]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        //if(root == NULL) return res;
        if(!root) return res;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            vector<int> t;
            queue<TreeNode*> qq;
            while(!q.empty()){
                t.push_back(q.front() -> val);
                if(q.front() -> left != NULL) qq.push(q.front() -> left);
                if(q.front() -> right != NULL) qq.push(q.front() -> right);
                q.pop();
            }
            res.push_back(t);
            q = qq;
        }
        reverse(res.begin(), res.end());
        return res;
    }
};
