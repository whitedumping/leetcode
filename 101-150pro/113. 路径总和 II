链接：https://leetcode-cn.com/problems/path-sum-ii
给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。

说明: 叶子节点是指没有子节点的节点。

示例:
给定如下二叉树，以及目标和 sum = 22，

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
返回:

[
   [5,4,11,2],
   [5,8,4,5]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<int> temp;
        backtracking(root, sum, temp);
        return res;
    }
    
    void backtracking(TreeNode* root, int sum, vector<int>& temp){
        if(root == NULL) return;
        if(sum == root -> val && root -> left == NULL && root -> right == NULL){
            temp.push_back(sum);
            res.push_back(vector<int>(temp.begin(), temp.end()));
            temp.pop_back();
        }
        else{
            temp.push_back(root -> val);
            if(root -> left != NULL) backtracking(root -> left, sum - root -> val, temp);
            if(root -> right != NULL) backtracking(root -> right, sum - root -> val, temp);
            temp.pop_back();
        }
    }
};
