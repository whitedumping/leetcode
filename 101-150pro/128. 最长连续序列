链接：https://leetcode-cn.com/problems/longest-consecutive-sequence
给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。

由于要求时间复杂度，需要使用哈希表，unordered_set为底层的hash
class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        if(nums.empty()) return 0;
        unordered_set<int> s(nums.begin(), nums.end());
        
        int maxlong = 1;
        int cnt = 0, t;
        unordered_set<int> :: iterator it;
        for(unordered_set<int> :: iterator ii = s.begin(); ii != s.end(); ii++){
            t = *ii;
            it = s.find(t - 1);
            if(it == s.end()){
                cnt = 1;
                t = t + 1;
                it = s.find(t);
                while(it != s.end()){
                    s.erase(it);
                    cnt++;
                    t++;
                    it = s.find(t);
                }
                maxlong = max(maxlong, cnt);
            }
        }
        return maxlong;
    }
};
