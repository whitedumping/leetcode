小扣在秋日市集购买了一个古董键盘。由于古董键盘年久失修，键盘上只有 26 个字母 a~z 可以按下，且每个字母最多仅能被按 k 次。

小扣随机按了 n 次按键，请返回小扣总共有可能按出多少种内容。由于数字较大，最终答案需要对 1000000007 (1e9 + 7) 取模。

示例 1：

输入：k = 1, n = 1

输出：26

解释：由于只能按一次按键，所有可能的字符串为 "a", "b", ... "z"

示例 2：

输入：k = 1, n = 2

输出：650

解释：由于只能按两次按键，且每个键最多只能按一次，所有可能的字符串（按字典序排序）为 "ab", "ac", ... "zy"

提示：

1 <= k <= 5
1 <= n <= 26*k

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/Uh984O
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//cdp[i][j] 保存中间结果，表示组合Ci/j有多少种可能
//dp[i][j] 表示i位当前选择多少个字符i<=n; j表示当前为第几个字母，第j个字母可以选0-k个，且能够出现在i个中不同的位置
//dp[10][2]表示第2个字母出现在前10个选中的中dp[i][j] += dp[i - t][j - 1] * cdp[t][i];t为第2个字母选择的个数

class Solution {
public:
    long long c(int m, int n) {
        int k = 1;
        long long ans=1;
        while(k <= m) {
            ans=((n-k+1)*ans)/k;
            k++;
        }
        return ans;
    }
    void init(vector<vector<long long>>& cdp, int n, int m){
        for(int i = 0; i <= m; ++i) cdp[i][0] = 1;
        for(int j = 1; j <= n; ++j){
            for(int i = 0; i <= j && i <= m; ++i){
                cdp[i][j] = c(i, j);
            }
        }/*
        for(auto i : cdp){
            for(auto ii : i) cout<<ii<<" ";
            cout<<endl;
        }*/
    }
    int keyboard(int k, int n) {
        vector<vector<long long>> dp(n + 1, vector<long long>(27, 0));
        vector<vector<long long>> cdp(k + 1, vector<long long>(n + 1, 0));
        init(cdp, n, k);
        for(int j = 0; j <= 26; ++j)
            dp[0][j] = 1;
        for(int i = 1; i <= n; ++i){
            for(int j = 1; j <= 26; ++j){
                for(int t = 0; t <= k; ++t){
                    if(i - t >= 0)
                        //dp[i][j] += dp[i - t][j - 1] * c(t, i);
                        dp[i][j] += dp[i - t][j - 1] * cdp[t][i];
                }
                dp[i][j] %= 1000000007;
            }
        }
        return dp[n][26];
    }
};
