给你一个整数数组 nums 和一个整数 x 。每一次操作时，你应当移除数组 nums 最左边或最右边的元素，然后从 x 中减去该元素的值。请注意，需要 修改 数组以供接下来的操作使用。

如果可以将 x 恰好 减到 0 ，返回 最小操作数 ；否则，返回 -1 。

 

示例 1：

输入：nums = [1,1,4,2,3], x = 5
输出：2
解释：最佳解决方案是移除后两个元素，将 x 减到 0 。
示例 2：

输入：nums = [5,6,7,8,9], x = 4
输出：-1
示例 3：

输入：nums = [3,2,20,1,1,3], x = 10
输出：5
解释：最佳解决方案是移除后三个元素和前两个元素（总共 5 次操作），将 x 减到 0 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/minimum-operations-to-reduce-x-to-zero
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


//题意转换，变成寻找中间一个连续的串，和为sum-x
class Solution {
public:

    int minOperations(vector<int>& nums, int x) {
        int n = nums.size(), ans = n + 1;
        long long sum = 0;
        for(int i = 0; i < n; ++i){
            sum += nums[i];
        }
        int left = 0;
        long long w = sum - x, s = 0;
        for(int i = 0; i < n; ++i){
            s += nums[i];
            while(s > w && left < n){
                s -= nums[left++];
            }
            if(s == w) ans = min(ans,  n - (i - left + 1));
        }
        return ans == n + 1 ? -1 : ans;
    }
};
