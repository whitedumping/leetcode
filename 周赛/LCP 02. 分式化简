有一个同学在学习分式。他需要将一个连分数化成最简分数，你能帮助他吗？



连分数是形如上图的分式。在本题中，所有系数都是大于等于0的整数。

 

输入的cont代表连分数的系数（cont[0]代表上图的a0，以此类推）。返回一个长度为2的数组[n, m]，使得连分数的值等于n / m，且n, m最大公约数为1。

 

示例 1：

输入：cont = [3, 2, 0, 2]
输出：[13, 4]
解释：原连分数等价于3 + (1 / (2 + (1 / (0 + 1 / 2))))。注意[26, 8], [-13, -4]都不是正确答案。
示例 2：

输入：cont = [0, 0, 3]
输出：[3, 1]
解释：如果答案是整数，令分母为1即可。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/deep-dark-fraction
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution {
public:
    int gcd(int a, int b){
        return a % b == 0 ? b : gcd(b, a % b);
    }
    vector<int> fraction(vector<int>& cont) {
        int len = cont.size();
        vector<int> res;
        if(len < 2){
            res.emplace_back(cont[0]);
            res.emplace_back(1);
            return res;
        }
        pair<int, int> pre = make_pair(1, cont[len - 1]);
        for(int i = len - 2; i >= 0; --i){
            pre.first += cont[i] * pre.second;
            int t = gcd(pre.first, pre.second);
            pre.first /= t;
            pre.second /= t;
            swap(pre.first, pre.second);
        }
        //cout<<gcd(2, 10)<<endl;
        res.emplace_back(pre.second);
        res.emplace_back(pre.first);
        return res;
    }
};
