在一个由 0 和 1 组成的二维矩阵内，找到只包含 1 的最大正方形，并返回其面积。

示例:

输入: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

输出: 4

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximal-square
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//模拟
class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.empty()) return 0;
        int m = matrix.size(), n = matrix[0].size();
        vector<vector<int>> dp(m, vector<int>(n, 0));
        
        int res = 0;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == '1'){
                    dp[i][j] = 1;
                    if(i >= 1 && j >= 1 && dp[i - 1][j - 1] > 0){
                        /*int t = dp[i - 1][j - 1], k;
                        for(int q = 1; q <= t; q++){
                            for(k = 1; k <= q; k++){
                                if(!dp[i][j - k] || !dp[i - k][j]) break;
                            }
                            //cout<<i<<" "<<j<<" "<<k<<endl;
                            if(k > q) dp[i][j] = max(q + 1, dp[i][j]);
                        }*/
                        dp[i][j] = min(min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;
                    }
                    res = max(res, dp[i][j]);
                }
            }
        }
        
        return res * res;
    }
};
/*
[["0","0","0","1"]
,["1","1","0","1"]
,["1","1","1","1"]
,["0","1","1","1"]
,["0","1","1","1"]]*/
