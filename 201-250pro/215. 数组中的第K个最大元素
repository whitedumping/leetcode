在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:

输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
示例 2:

输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4
说明:

你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/kth-largest-element-in-an-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//快排的能够迅速找到某个数在多少位
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int len = nums.size();
        return fast(nums, 0, len - 1, len - k + 1);
    }
    
    int fast(vector<int>& nums, int l, int r, int k){
        int temp = nums[l];
        int i = l, j = r, t;
        while(i < j){
            //cout<<i<<" "<<j<<endl;
            if(nums[j] > temp){
                --j;
                continue;
            }
            nums[i] = nums[j];
            ++i;
            while(i < j && nums[i] <= temp) i++;
            
            if(i == j) break;
            nums[j--] = nums[i];
        }
        nums[i] = temp;
        //cout<<i+1<<" "<<k<<endl;
        //for(auto n : nums) cout<<n<<" ";
        //cout<<endl;
        if(k == i + 1) return temp;
        else if(k < i + 1) return fast(nums, l, i - 1, k);
        else return fast(nums, i + 1, r, k);
        return temp;
    }
};
