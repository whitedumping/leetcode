找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。

说明：

所有数字都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: k = 3, n = 7
输出: [[1,2,4]]
示例 2:

输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum-iii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution {
public:
    vector<vector<int>> res;
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> temp;
        backtracking(k, n, 1, temp);
        return res;
    }
    
    void backtracking(int k, int n, int start, vector<int>& temp){
        if(k == 0 && 0 == n) res.push_back(vector<int>(temp));
        else{
            if((9 + 9 - k + 1) * k / 2 < n) return;
            for(int i = start; i <= 9 && i <= n; i++){
                temp.push_back(i);
                backtracking(k - 1, n - i, i + 1, temp);
                temp.pop_back();
            }
        }
    }
};
