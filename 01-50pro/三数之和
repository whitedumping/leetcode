给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。
注意：答案中不可以包含重复的三元组。
例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，
满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]

思路：参考题目讨论区的某题解
排序数组，设置两个指针start，end，循环 i, start = i + 1, end
对应的三数相加，result > target, 则end太大，end--；result < target, 则start太小，start++；

vector<vector<int>> threeSum(vector<int>& nums) {
    vector<vector<int>> res;
    int len = nums.size(), left, right, temp;
    sort(nums.begin(), nums.end());
    for(int i = 0; i < len - 2; i++){
        left = i + 1;
        right = len - 1;
        while(left < right){
            temp = nums[i] + nums[left] + nums[right];
            if(temp == 0){
                vector<int> t = {nums[i], nums[left], nums[right]};
                res.push_back(t);
                while(left + 1 < right && nums[left] == nums[left + 1]) left++;
                while(right - 1 > left && nums[right] == nums[right - 1]) right--;
                left++;
                right--;
            }else if(temp < 0){
                left++;
            }else{
                right--;
            }
        }
        while(i + 1 < len - 1 && nums[i] == nums[i + 1]) i++;
    }
    return res;
}
