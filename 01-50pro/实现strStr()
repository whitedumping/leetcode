给定一个 haystack 字符串和一个 needle 字符串，在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从0开始)。如果不存在，则返回  -1。
示例 1:
输入: haystack = "hello", needle = "ll"
输出: 2

思路：kmp算法,处理匹配串，为一个位置匹配失败，能够避免每次移动一个位置，根据next数组，可以具有高效的一次移动多个位置
kmp的next数组有点难理解，思路是前后缀的使用
如：abcabcab
5号位abcab，前后缀相同的为ab，故该位置匹配失败，可以移动两个位置
void getNext(string s, int next[]){
    next[0] = -1;
    int i = 0, j = -1, len = s.length();
    while(i < len - 1){
        if(j == -1 || s[i] == s[j]){
            i++;
            j++;
            next[i] = j;
        }else{
            j = next[j];
        }
    }
}
int strStr(string haystack, string needle) {
    int len1 = needle.length(), len2 = haystack.length();
    if(len2 == 0 && len1 == 0) return 0;
    if(len1 == 0) return 0;
    int next[len1] = {0};
    getNext(needle, next);

    int i = 0, j = 0;
    while(i < len2 && j < len1){
        if(j == -1 || haystack[i] == needle[j]){
            i++;
            j++;
        }else{
            j = next[j];
        }
    }

    if(j == len1) return i - j;
    return -1;
}
