计算给定二叉树的所有左叶子之和。

示例：

    3
   / \
  9  20
    /  \
   15   7

在这个二叉树中，有两个左叶子，分别是 9 和 15，所以返回 24

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sum-of-left-leaves
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//递归计算，判断左子树且为叶子节点，则相加返回

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if(!root) return 0;
        //if(isLeaf(root)) return 0;
        if(root -> left && isLeaf(root -> left))
            return root -> left -> val + sumOfLeftLeaves(root -> right);
        else return sumOfLeftLeaves(root -> left) + sumOfLeftLeaves(root -> right);
    }

    bool isLeaf(TreeNode* root){
        return !(root -> left) && !(root -> right);
    }
};
