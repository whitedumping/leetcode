合并 k 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。
示例:
输入:
[
  1->4->5,
  1->3->4,
  2->6
]
输出: 1->1->2->3->4->4->5->6

思路：依次两两合并，若为单数，最后一个链表直接参与下一次合并

ListNode* mergeKLists(vector<ListNode*>& lists) {
    vector<ListNode*> temps;
    ListNode *t1, *t2;
    int len = lists.size();
    if(len == 0) return NULL;
    while(lists.size() != 1){
        len = lists.size();
        for(int i = 0; i < len; i += 2){
            //temp1 = lists[i];   //进行两条链表合并
            if(i + 1 < len){
                //temp2 = lists[i + 1];
                t1 = new ListNode(0);
                t2 = t1;
                while(lists[i] != NULL && lists[i + 1] != NULL){
                    if(lists[i] -> val <= lists[i + 1] -> val){
                        t2 -> next = lists[i];
                        t2 = t2 -> next;
                        lists[i] = lists[i] -> next;
                    }else{
                        t2 -> next = lists[i + 1];
                        t2 = t2 -> next;
                        lists[i + 1] = lists[i + 1] -> next;
                    }
                }
                if(lists[i] != NULL) t2 -> next = lists[i];
                if(lists[i + 1] != NULL) t2 -> next = lists[i + 1];
                temps.push_back(t1 -> next);
            }else{
                temps.push_back(lists[i]);
            }
        }
        lists = temps;
        temps.clear();
    }
    return lists[0];
}
