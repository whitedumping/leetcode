给定一个整数 n, 返回从 1 到 n 的字典顺序。

例如，

给定 n =1 3，返回 [1,10,11,12,13,2,3,4,5,6,7,8,9] 。

请尽可能的优化算法的时间复杂度和空间复杂度。 输入的数据 n 小于等于 5,000,000。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/lexicographical-numbers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//dfs遍历，每次以当前未比较过第一位作为比较的大小

class Solution {
public:
    vector<int> lexicalOrder(int n) {
        vector<int> res;
        for(int i = 1; i < 10; ++i) dfs(res, i, n);
        return res;
    }

    void dfs(vector<int>& res, int num, int n){
        if(num > n) return;
        res.emplace_back(num);
        for(int i = 0; i < 10; ++i) dfs(res, num * 10 + i, n);
    }
};
