链接：https://leetcode-cn.com/problems/subsets
Given a set of distinct integers, nums, return all possible subsets (the power set).
Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

按照上一题的，按照组合取数的个数进行遍历
vector<vector<int>> res;
vector<int> tempnums;
int tempn;
vector<vector<int>> subsets(vector<int>& nums) {
    vector<int> temp;
    int len = nums.size();
    tempn = len;
    tempnums = nums;
    res.push_back(vector<int>());
    for(int i = 1; i <= len; i++){
        backtracking(i, 0, 0, temp);
    }
    return res;
}

void backtracking(int k, int start, int cnt, vector<int>& temp){
    if(cnt == k) res.push_back(vector<int> (temp.begin(), temp.end()));
    else{
        for(int i  = start; i < tempn - k + cnt + 1; i++){
            temp.push_back(tempnums[i]);
            backtracking(k, i + 1, cnt + 1, temp);
            temp.pop_back();
        }
    }
}
