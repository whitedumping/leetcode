链接：https://leetcode-cn.com/problems/largest-rectangle-in-histogram
给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。
求在该柱状图中，能够勾勒出来的矩形的最大面积。
以上是柱状图的示例，其中每个柱子的宽度为 1，给定的高度为 [2,1,5,6,2,3]。
图中阴影部分为所能勾勒出的最大矩形面积，其面积为 10 个单位。

示例:
输入: [2,1,5,6,2,3]
输出: 10


官方题解：https://leetcode-cn.com/problems/largest-rectangle-in-histogram/solution/zhu-zhuang-tu-zhong-zui-da-de-ju-xing-by-leetcode/

栈：每次遇到比栈尾小的柱子，则计算栈中局部的最大矩阵，以此来是加入当前柱子使得栈中高度呈现递增
int largestRectangleArea(vector<int>& heights) {
    int maxres = 0;
    stack<int> st;
    int len = heights.size();
    if(len == 0) return maxres;
    st.push(-1);
    for(int i = 0; i < len; i++){
        while(st.top() != -1 && heights[i] < heights[st.top()]){
            int temp = heights[st.top()];
            st.pop();
            int res = temp * (i - st.top() - 1);
            if(maxres < res){
                maxres = res;
            }
        }
        st.push(i);
    }
    //加入最后的柱子后，处理栈中剩下的柱子数
    int temp = st.top();
    while(-1 != st.top()){
        int temp1 = st.top();
        st.pop();
        int res = heights[temp1] * (temp - st.top());
        if(maxres < res){
            maxres = res;
        }
    }
    return maxres;
}
