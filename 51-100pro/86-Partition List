链接：https://leetcode-cn.com/problems/partition-list
Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.
You should preserve the original relative order of the nodes in each of the two partitions.

Example:
Input: head = 1->4->3->2->5->2, x = 3
Output: 1->2->2->4->3->5

思路：直接遍历保存到新的链表
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* res = new ListNode(0);
        ListNode *p1, *p2 = new ListNode(0), *t;
        t = res;
        p1 = p2;
        while(head != NULL){
            if(x > head -> val){
                res -> next = head;
                res = res -> next;
            }else{
                p2 -> next = head;
                p2 = p2 -> next;
            }
            head = head -> next;
        }
        p2 -> next =NULL;
        res -> next = p1 -> next;
        return t -> next;
    }
};
