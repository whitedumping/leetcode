链接：https://leetcode-cn.com/problems/unique-binary-search-trees
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3


思路：和上一题差不多，但是只需要统计其中的总个数123的组合与456的组合数是相同的
class Solution {
public:
    int numTrees(int n) {
        vector<int> g(n + 1);
        g[0] = 1;
        g[1] = 1;
        for(int i = 2; i <= n; i++){
            for(int j = 1; j <= i; j++){
                //这里每次只需要计算左边节点数和右边节点数分别可能的有多少种二叉树的组合
                g[i] += g[j - 1] * g[i - j];
            }
        }
        return g[n];
    }
};
