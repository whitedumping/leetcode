链接：https://leetcode-cn.com/problems/sort-colors
给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
注意:
不能使用代码库中的排序函数来解决这道题。

示例:
输入: [2,0,2,1,1,0]
输出: [0,0,1,1,2,2]

思路：三个指针，cur指向当前需要判断的数，p1、p2用于指向左边、右边的1、2
      策略，cur==1，与p1交换，cur==2与p2交换
      
void sortColors(vector<int>& nums) {
    //三指针，一次遍历
    int len = nums.size();
    if(len < 2) return;
    int p0 = 0, p2 = len - 1, cur = 0;
    //表示只含有1
    while(cur <= p2){
        if(nums[cur] == 0){
            swap(nums[cur++], nums[p0++]);
        }else if(nums[cur] == 2){
            swap(nums[cur], nums[p2--]);
        }else cur++;
    }
}
